---
team: 'release'
staging_server: internal-tools.delivery.puppetlabs.net
apt_host: internal-tools.delivery.puppetlabs.net
apt_signing_server: internal-tools.delivery.puppetlabs.net
yum_host: internal-tools.delivery.puppetlabs.net
yum_staging_server: internal-tools.delivery.puppetlabs.net
svr4_host: internal-tools.delivery.puppetlabs.net
p5p_host: internal-tools.delivery.puppetlabs.net
ips_host: ladybug.delivery.puppetlabs.net
nuget_host: nexus.delivery.puppetlabs.net:8081
nuget_repo_path: /content/repositories/nuget-internal-tools
svr4_path: /opt/internal-tools/solaris
p5p_path: /opt/internal-tools/solaris
ips_path: /export/repo-internal-tools
apt_repo_path: /opt/tools/aptly/internal/staging
apt_repo_staging_path: /opt/tools/aptly/internal/staging
yum_repo_path: /opt/internal-tools/yum
ips_repo: internal-tools
apt_repo_name: 'internal'
yum_repo_name: ''
apt_repo_command: |
  keychain -k mine;
  eval $(/usr/bin/keychain -q --agents gpg --eval __GPG_KEY__);
  export GPG_TTY=$(tty);
  for dist in `ls __REPO_PATH__`; do
    sudo chmod g+w /opt/tools/aptly/db/LOG;
    aptly repo add -remove-files internal-${dist} __REPO_PATH__/${dist}
    if [ -d /opt/tools/aptly/public/__REPO_NAME__/dists/${dist} ]; then
      aptly publish update -gpg-key="__GPG_KEY__" ${dist} __REPO_NAME__
    else
      aptly publish repo -gpg-key="__GPG_KEY__" __REPO_NAME__-${dist} __REPO_NAME__
    fi
  done
  keychain -k mine;
yum_repo_command: |
  for repodir in $(find "__REPO_PATH__" -mindepth 2 -name "*.rpm" | xargs -I {} dirname {} | uniq) ; do
    [ -d "${repodir}" ] || continue;
    echo "Generating repodata for ${repodir}..."
    sudo createrepo --checksum=sha --database --update "${repodir}";
    echo "Finished generating repodata for ${repodir}..."
  done;
ips_signing_server: rama.delivery.puppetlabs.net
s3_ship: false
