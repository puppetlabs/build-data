---
team: release
gpg_key: '4528B6CD9E61EF26'
rpm_build_host: rpm-builder.delivery.puppetlabs.net
deb_build_host: builder-deb.delivery.puppetlabs.net
osx_build_host: osx-builder.delivery.puppetlabs.net
ips_build_host: builder-ips.delivery.puppetlabs.net
dmg_path: "/opt/downloads/mac"
nonfinal_dmg_path: "/opt/repository-nightlies/downloads"
ips_path: "/opt/downloads/solaris"
nonfinal_ips_path: "/opt/repository-nightlies/downloads"
swix_path: "/opt/downloads/eos"
nonfinal_swix_path: "/opt/repository-nightlies/downloads"
msi_path: "/opt/downloads/windows"
nonfinal_msi_path: "/opt/repository-nightlies/downloads"
certificate_pem: "/root/puppet_cert.pem"
privatekey_pem: "/root/signing.pem"
jenkins_build_host: jenkins-release.delivery.puppetlabs.net
jenkins_packaging_job: puppetlabs-packaging
jenkins_repo_path: "/opt/jenkins-builds"
distribution_server: builds.delivery.puppetlabs.net
builds_server: builds.delivery.puppetlabs.net
metrics_url: http://metrics.delivery.puppetlabs.net/overview/metrics
benchmark: false
staging_server: weth.delivery.puppetlabs.net
signing_server: mozart.delivery.puppetlabs.net
yum_host: 'enterprise.delivery.puppetlabs.net'
apt_host: 'enterprise.delivery.puppetlabs.net'
tar_host: 'downloads.puppetlabs.com'
msi_host: 'downloads.puppetlabs.com'
dmg_host: 'downloads.puppetlabs.com'
swix_host: 'downloads.puppetlabs.com'
msi_host: 'downloads.puppetlabs.com'
msi_staging_server: 'weth.delivery.puppetlabs.com'
tar_staging_server: 'weth.delivery.puppetlabs.net'
dmg_staging_server: 'weth.delivery.puppetlabs.net'
swix_staging_server: 'weth.delivery.puppetlabs.net'
msi_staging_server: 'weth.delivery.puppetlabs.net'
apt_signing_server: weth.delivery.puppetlabs.net
apt_repo_path: "/opt/repository/apt"
apt_repo_staging_path: "/opt/tools/freight/apt"
nonfinal_apt_repo_path: "/opt/repository-nightlies/apt"
nonfinal_apt_repo_staging_path: "/opt/tools/freight-nightlies/apt"
yum_staging_server: weth.delivery.puppetlabs.net
yum_repo_path: "/opt/repository/yum"
nonfinal_yum_repo_path: "/opt/repository-nightlies/yum"
apt_archive_path: "/opt/release-archives-staging/apt"
freight_archive_path: "/opt/tools/freight-archives/apt"
yum_archive_path: "/opt/release-archives-staging/yum"
downloads_archive_path: "/opt/release-archives-staging/downloads"
apt_repo_command: |
  (
    flock --wait 600 200
    keychain -k mine;
    eval $(/usr/bin/keychain -q --agents gpg --eval __GPG_KEY__);
    export GPG_TTY=$(tty);
    if printf -- '%s' "__APT_PLATFORMS__" | egrep -q -- "APT_PLATFORMS"; then
      sudo -E freight-cache -c /etc/freight.conf.d/community.conf &
    else
      for repodir in __APT_PLATFORMS__; do
        sudo -E freight-cache -c /etc/freight.conf.d/community.conf apt/${repodir} &
      done
    fi
    wait
    keychain -k mine;
  ) 200>/var/lock/apt-repo-lock
nonfinal_apt_repo_command: |
  (
    flock --wait 600 400
    keychain -k mine;
    eval $(/usr/bin/keychain -q --agents gpg --eval __GPG_KEY__);
    export GPG_TTY=$(tty);
    if printf -- '%s' "__APT_PLATFORMS__" | egrep -q -- "APT_PLATFORMS"; then
      sudo -E freight-cache -c /etc/freight-nightly.conf.d/community.conf &
    else
      for repodir in __APT_PLATFORMS__; do
        sudo -E freight-cache -c /etc/freight-nightly.conf.d/community.conf apt/${repodir} &
      done
    fi
    wait
    keychain -k mine;
  ) 400>/var/lock/apt-nightly-repo-lock
apt_archive_repo_command: |
  (
    flock --wait 600 600
    keychain -k mine;
    eval $(/usr/bin/keychain -q --agents gpg --eval __GPG_KEY__);
    export GPG_TTY=$(tty);
    if printf -- '%s' "__APT_PLATFORMS__" | egrep -q -- "APT_PLATFORMS"; then
      sudo -E freight-cache -c /etc/freight.conf.d/archive.conf &
    else
      for repodir in __APT_PLATFORMS__; do
        sudo -E freight-cache -c /etc/freight.conf.d/archive.conf apt/${repodir} &
      done
    fi
    wait
    keychain -k mine;
  ) 600>/var/lock/apt-archive-repo-lock
yum_repo_command: |
  (
    flock --wait 1200 300
    repodirs=$(find "__REPO_PATH__" -mindepth 3 -path "*__REPO_NAME__*.rpm" | xargs -I {} dirname {} | sort | uniq)
    for repodir in $repodirs; do
      [ -d "${repodir}" ] || continue ;
      echo "Generating and signing repodata for ${repodir} with __GPG_KEY__..." ;
      if [ -d "${repodir}/repodata" ]; then
        sudo chown -R root:release "${repodir}/repodata" ;
        sudo chmod -R g+w "${repodir}/repodata" ;
      fi
      createrepo --checksum=sha --database --update "${repodir}" &
    done;
    wait;
    keychain -k mine;
    eval $(/usr/bin/keychain -q --agents gpg --eval __GPG_KEY__);
    for repodir in $repodirs; do
      gpg --yes --no-tty --use-agent --armor --detach-sign -u __GPG_KEY__ "${repodir}/repodata/repomd.xml" ;
      sudo chown -R root:release "${repodir}/repodata" ;
      sudo chmod -R g+w "${repodir}/repodata"
    done;
    keychain -k mine;
  ) 300>/var/lock/yum-repo-lock
osx_signing_cert: "Developer ID Installer: PUPPET LABS, INC. (VKGLGN2B6Y)"
osx_signing_keychain: "/Users/jenkins/Library/Keychains/signing.keychain"
osx_signing_server: 'jenkins@osx-signer.delivery.puppetlabs.net'
osx_signing_ssh_key: '/home/jenkins/.ssh/id_signing'
msi_signing_server: 'windowssigning-aio1-prod.delivery.puppetlabs.net'
msi_signing_ssh_key: '/home/jenkins/.ssh/id_signing'
msi_signing_service_url: 'https://serverless-sign-4k7em2ejkq-uc.a.run.app/signMSI'
msi_signing_gcp_service_account_credentials: '/var/lib/jenkins/.creds/gcp-service-account-credentials-windows-signer.json'
ips_signing_ssh_key: '/home/jenkins/.ssh/id_signing'
ips_signing_server: 'rama.delivery.puppetlabs.net'
s3_ship: true
foss_platforms:
  - debian-9-amd64
  - debian-9-i386
  - debian-10-amd64
  - debian-11-amd64
  - el-6-i386
  - el-6-x86_64
  - el-7-x86_64
  - el-7-ppc64le
  - el-7-aarch64
  - el-8-x86_64
  - el-8-ppc64le
  - el-8-aarch64
  - el-9-x86_64
  - fedora-32-x86_64
  - fedora-34-x86_64
  - osx-10.15-x86_64
  - osx-11-arm64
  - osx-11-x86_64
  - osx-12-x86_64
  - sles-11-i386
  - sles-11-x86_64
  - sles-12-x86_64
  - sles-12-ppc64le
  - sles-15-x86_64
  - ubuntu-16.04-amd64
  - ubuntu-16.04-i386
  - ubuntu-16.04-ppc64el
  - ubuntu-18.04-amd64
  - ubuntu-18.04-aarch64
  - ubuntu-20.04-amd64
  - ubuntu-20.04-aarch64
  - windows-2012-x86
  - windows-2012-x64
rsync_servers:
  - 'downloadserver-rsync-prod-1.ops.puppetlabs.net'
  - 'downloadserver-rsync-prod-2.ops.puppetlabs.net'
