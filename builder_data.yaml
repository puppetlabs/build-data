---
team: 'release'
staging_server: pl-build-tools.delivery.puppetlabs.net
apt_host: pl-build-tools.delivery.puppetlabs.net
apt_signing_server: pl-build-tools.delivery.puppetlabs.net
yum_host: pl-build-tools.delivery.puppetlabs.net
yum_staging_server: pl-build-tools.delivery.puppetlabs.net
svr4_host: pl-build-tools.delivery.puppetlabs.net
p5p_host: pl-build-tools.delivery.puppetlabs.net
ips_host: rama.delivery.puppetlabs.net
nuget_host: artifactory.delivery.puppetlabs.net
nuget_repo_path: /artifactory/api/nuget/nuget-pl-build-tools
svr4_path: /opt/build-tools/solaris
p5p_path: /opt/build-tools/solaris
ips_path: /export/repo-pl-build-tools
apt_repo_path: /opt/tools/freight.build-tools/apt
apt_repo_staging_path: /opt/tools/freight.build-tools/apt
yum_repo_path: /opt/build-tools/yum
ips_repo: pl-build-tools
apt_repo_name: ''
yum_repo_name: ''
apt_repo_command: |
  keychain -k mine;
  eval $(/usr/bin/keychain -q --agents gpg --eval __GPG_KEY__);
  export GPG_TTY=$(tty);
  sudo -E freight-cache -c /etc/freight.conf.d/pl-build-tools-repo.conf;
  keychain -k mine;
yum_repo_command: |
  for repodir in $(find "__REPO_PATH__" -mindepth 2 -name "*.rpm" | xargs -I {} dirname {} | uniq) ; do
    [ -d "${repodir}" ] || continue;
    echo "Generating repodata for ${repodir}..."
    sudo createrepo --checksum=sha --database --update "${repodir}";
    echo "Finished generating repodata for ${repodir}..."
  done;
osx_signing_cert: "Developer ID Installer: PUPPET LABS, INC. (VKGLGN2B6Y)"
osx_signing_keychain: "/Users/jenkins/Library/Keychains/signing.keychain"
osx_signing_server: jenkins@osx-signer.delivery.puppetlabs.net
ips_signing_server: rama.delivery.puppetlabs.net
s3_ship: false
